#!/usr/bin/env python

# $LicenseInfo:firstyear=2016&license=internal$
# 
# Copyright (c) 2016, Linden Research, Inc.
# 
# The following source code is PROPRIETARY AND CONFIDENTIAL. Use of
# this source code is governed by the Linden Lab Source Code Disclosure
# Agreement ("Agreement") previously entered between you and Linden
# Lab. By accessing, using, copying, modifying or distributing this
# software, you acknowledge that you have been informed of your
# obligations under the Agreement and agree to abide by those obligations.
# 
# ALL LINDEN LAB SOURCE CODE IS PROVIDED "AS IS." LINDEN LAB MAKES NO
# WARRANTIES, EXPRESS, IMPLIED OR OTHERWISE, REGARDING ITS ACCURACY,
# COMPLETENESS OR PERFORMANCE.
# $/LicenseInfo$
# Copyright (c) 2013, Linden Research, Inc.

import argparse
import os
import sys
import subprocess
import InstallerUserMessage

cwd = os.path.dirname(os.path.realpath(__file__))

executable_name = ""
if sys.platform.startswith('darwin'):
   executable_name = "Second Life"
elif sys.platform.startswith("win") or sys.platform.startswith("cyg"):
   if os.path.isfile(os.path.join(cwd,"SecondLifeViewer.exe")):
      executable_name = "SecondLifeViewer.exe"
   elif os.path.isfile(os.path.join(cwd,"SecondLifeTest.exe")):
      executable_name = "SecondLifeTest.exe"
   else:
      sys.exit("Can't find Windows viewer binary")
elif sys.platform.startswith("linux"):
   executable_name = "secondlife"
else:
   #SL doesn't run on VMS or punch cards
   sys.exit("Unsupported platform")

#print "COYOT: executable name ", executable_name
#print "COYOT: path ", os.path.dirname(os.path.abspath(sys.argv[0]))

viewer_binary = os.path.join(os.path.dirname(os.path.abspath(sys.argv[0])),executable_name) 

parser = argparse.ArgumentParser()
#parser.add_argument('--f', action='store_const', const=42)
args = parser.parse_known_args(sys.argv)
args_list_to_pass = args[1][1:]
args_list_to_pass.insert(0,viewer_binary)
print "COYOT: arrrrrghs to pass", args_list_to_pass

#to prove we are launching from the script, launch a Tkinter window first
frame2 = InstallerUserMessage(title = "Second Life")
frame2.basic_message(message = viewer_binary, icon_name="head-sl-logo.gif")

#viewer_process = subprocess.Popen(args_list_to_pass)
